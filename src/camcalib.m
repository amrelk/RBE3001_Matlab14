% Auto-generated by cameraCalibrator app on 30-Sep-2022
%-------------------------------------------------------


% Define images to process
imageFileNames = {'/home/jc-merlab/RBE3001_Matlab14/Image51.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image52.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image53.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image54.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image55.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image56.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image61.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image62.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image63.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image64.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image65.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image66.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image67.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image77.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image81.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image82.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image83.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image84.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image85.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image86.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image87.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image88.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image89.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image91.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image92.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image95.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image97.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image98.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image99.png',...
    '/home/jc-merlab/RBE3001_Matlab14/Image100.png',...
    };
% Detect calibration pattern in images
detector = vision.calibration.monocular.CheckerboardDetector();
[imagePoints, imagesUsed] = detectPatternPoints(detector, imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates for the planar pattern keypoints
squareSize = 25;  % in units of 'millimeters'
worldPoints = generateWorldPoints(detector, 'SquareSize', squareSize);

% Calibrate the camera using fisheye parameters
[cameraParams, imagesUsed, estimationErrors] = estimateFisheyeParameters(imagePoints, worldPoints, ...
    [mrows, ncols], ...
    'EstimateAlignment', false, ...
    'WorldUnits', 'millimeters');

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortFisheyeImage(originalImage, cameraParams.Intrinsics);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
